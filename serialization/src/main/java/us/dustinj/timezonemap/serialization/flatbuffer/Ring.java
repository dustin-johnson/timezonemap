// automatically generated by the FlatBuffers compiler, do not modify

package us.dustinj.timezonemap.serialization.flatbuffer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Ring extends Table {
  public static Ring getRootAsRing(ByteBuffer _bb) { return getRootAsRing(_bb, new Ring()); }
  public static Ring getRootAsRing(ByteBuffer _bb, Ring obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Ring __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public AnchorPoint firstPoint() { return firstPoint(new AnchorPoint()); }
  public AnchorPoint firstPoint(AnchorPoint obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public DeltaPoint subsequentPoints(int j) { return subsequentPoints(new DeltaPoint(), j); }
  public DeltaPoint subsequentPoints(DeltaPoint obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o) + j * 8, bb) : null; }
  public int subsequentPointsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static void startRing(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addFirstPoint(FlatBufferBuilder builder, int firstPointOffset) { builder.addStruct(0, firstPointOffset, 0); }
  public static void addSubsequentPoints(FlatBufferBuilder builder, int subsequentPointsOffset) { builder.addOffset(1, subsequentPointsOffset, 0); }
  public static void startSubsequentPointsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(8, numElems, 4); }
  public static int endRing(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

